/**
\mainpage

<!-- 
Provide an overview of your package.
-->
PyRIDE, Python based Robot Interactive Development Environment, is a
software development framework for rapid robot behaviour programming in Python scripting language. It is also an integration framework for bring disparate robot functional modules together. This documentation gives a detailed description of application programming interface of PyRIDE on Pepper robots.

\section compile Compile and Install from source for Pepper
\subsection require Prerequisites
You need NaoQi SDK 2.5.5 with the corresponding cross compiler toolchain installed on your system. You will also need qibuild 3.x build system installed.

\subsection compile To compile PyRIDE for Pepper
-# Get source code: <b>git clone https://github.com/kunle12/pyride_pepper.git</b> under a working directory.
-# Compile and install the following modules under <b>libsrc</b> subdirectory using <b>qibuild</b> and <b>qitoolchain</b> commands (see qibuild documentation for the details).

  - commoncpp2-1.8.1
  - ccrtp-1.7.2
  - celt-0.11.1
  - PyRideCore

-# Compile <b>PyPepperServer</b> using <b>qibuild</b>.

\subsection install To install PyRIDE on Pepper
Under a Pepper terminal (using ssh), copy the following share library objects extracted from the packages (or copy directly from the <b>build-cross-atom-release/sdk/lib</b> sub-directory under the source directories) built in the previous section to <b>/home/nao/naoqi/lib</b> directory on the robot.

  - libccext2.so
  - libccrtp.so
  - libccgnu2.so
  - libcelt.so
  - libcrypt.so
  - libpyridecore.so
  - libpypepperserver.so

Similarly, copy the entire <b>scripts</b> under the repository to <b>/home/nao/naoqi/lib</b> and rename the directory to <b>python</b>.

Create an <b>autoload.ini</b> file under <b>/home/nao/naoqi/preference</b> with the following content:

\code
# autoload.ini
#
# Use this file to list the cross-compiled modules that you wish to load.
# You must specify the full path to the module, python module or program.

[user]
#the/full/path/to/your/liblibraryname.so  # load liblibraryname.so
/home/nao/naoqi/lib/libpypepperserver.so

[python]
#the/full/path/to/your/python_module.py   # load python_module.py

[program]
#the/full/path/to/your/program            # load program
\endcode

<b>autoload.ini</b> will automatically load PyNaoServer when NaoQi starts.

<b>NOTE:</b> PyRIDE configuration file <b>pyrideconfig.xml</b> will be automatically generated under <b>/home/nao/naoqi/preference</b> when PyRIDE for Pepper is successfully run and *properly* shutdown. As older NaoQi systems do not properly shutdown PyRIDE module when shutting down the robot by pressing the centre button, you may have to call \c PyPepper.saveConfiguration command to save important configuration, e.g. remote user access account, periodically.

\section codeapi Code API
PyPepper

<!--
Provide links to specific auto-generated API documentation within your
package that is of particular interest to a reader. Doxygen will
document pretty much every part of your code, so do your best here to
point the reader to the actual API.

If your codebase is fairly large or has different sets of APIs, you
should use the doxygen 'group' tag to keep these APIs together. For
example, the roscpp documentation has 'libros' group.
-->


*/
